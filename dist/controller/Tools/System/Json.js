"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Json=void 0;const path_1=require("path"),fs_1=require("fs");class Json{path;schema;options;constructor(t,s,e){this.path=(0,path_1.resolve)(t),this.schema=s,this.options=e,this.read,this.update=this.update.bind(this),this.onUpdate=this.onUpdate.bind(this)}get read(){if(!(0,fs_1.existsSync)(this.path)){if(!this.options?.force)throw new Error(`Can't found "${this.path}" file, use force options to create`);(0,fs_1.mkdirSync)((0,path_1.dirname)(this.path),{recursive:!0}),(0,fs_1.writeFileSync)(this.path,JSON.stringify(this.schema??"{}"))}try{var t=JSON.parse((0,fs_1.readFileSync)(this.path,{encoding:"utf-8"}));return this.schema?Json.formatting(this.schema,t):t}catch{return this.schema}}update(t,s){t=t instanceof Function?t(this.read):t;(0,fs_1.writeFileSync)(this.path,s?JSON.stringify(t):JSON.stringify(t,null,4))}onUpdate(s){return(0,fs_1.watch)(this.path,t=>"change"===t&&setTimeout(s,0))}static formatting(s,t){if(Array.isArray(s))return Array.isArray(t)?t.map(t=>"object"==typeof s[0]?Json.formatting(s[0],t):typeof t==typeof s[0]?t:s[0]):[];var e,i={};for(e of Object.keys(s))"object"!=typeof s[e]?i[e]=typeof t?.[e]==typeof s[e]?t?.[e]:s[e]:i[e]=Json.formatting(s[e],t?.[e]);return i}}function json(t,s,e){return new Json(t,s,e)}exports.Json=Json,exports.default=json;